{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "TestFactory-08"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"LS_BlobFlow_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_BlobFlow'"
		},
		"LS_Git_Connect_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_TATA_MOTOR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BlobFlow",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TATAMOTORS.csv",
						"container": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Symbol",
						"type": "String"
					},
					{
						"name": "Series",
						"type": "String"
					},
					{
						"name": "Prev Close",
						"type": "String"
					},
					{
						"name": "Open",
						"type": "String"
					},
					{
						"name": "High",
						"type": "String"
					},
					{
						"name": "Low",
						"type": "String"
					},
					{
						"name": "Last",
						"type": "String"
					},
					{
						"name": "Close",
						"type": "String"
					},
					{
						"name": "VWAP",
						"type": "String"
					},
					{
						"name": "Volume",
						"type": "String"
					},
					{
						"name": "Turnover",
						"type": "String"
					},
					{
						"name": "Trades",
						"type": "String"
					},
					{
						"name": "Deliverable Volume",
						"type": "String"
					},
					{
						"name": "%Deliverble",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BlobFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Tata_Steel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BlobFlow",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TATASTEEL.csv",
						"container": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Symbol",
						"type": "String"
					},
					{
						"name": "Series",
						"type": "String"
					},
					{
						"name": "Prev Close",
						"type": "String"
					},
					{
						"name": "Open",
						"type": "String"
					},
					{
						"name": "High",
						"type": "String"
					},
					{
						"name": "Low",
						"type": "String"
					},
					{
						"name": "Last",
						"type": "String"
					},
					{
						"name": "Close",
						"type": "String"
					},
					{
						"name": "VWAP",
						"type": "String"
					},
					{
						"name": "Volume",
						"type": "String"
					},
					{
						"name": "Turnover",
						"type": "String"
					},
					{
						"name": "Trades",
						"type": "String"
					},
					{
						"name": "Deliverable Volume",
						"type": "String"
					},
					{
						"name": "%Deliverble",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BlobFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Two_Files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BlobFlow",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BlobFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BlobFlow",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BlobFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_BlobFlow')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_BlobFlow_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Git_Connect')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LS_Git_Connect_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_TATA_MOTOR",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "DS_Tata_Steel",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "LS_BlobFlow",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "union1"
						},
						{
							"name": "pivot1"
						},
						{
							"name": "select1"
						},
						{
							"name": "cast1"
						},
						{
							"name": "window1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Date as string,",
						"          Symbol as string,",
						"          Series as string,",
						"          {Prev Close} as string,",
						"          Open as string,",
						"          High as string,",
						"          Low as string,",
						"          Last as string,",
						"          Close as string,",
						"          VWAP as string,",
						"          Volume as string,",
						"          Turnover as string,",
						"          Trades as string,",
						"          {Deliverable Volume} as string,",
						"          {%Deliverble} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source(output(",
						"          Date as string,",
						"          Symbol as string,",
						"          Series as string,",
						"          {Prev Close} as string,",
						"          Open as string,",
						"          High as string,",
						"          Low as string,",
						"          Last as string,",
						"          Close as string,",
						"          VWAP as string,",
						"          Volume as string,",
						"          Turnover as string,",
						"          Trades as string,",
						"          {Deliverable Volume} as string,",
						"          {%Deliverble} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source2",
						"source1, source2 union(byName: true)~> union1",
						"cast1 pivot(groupBy(Date),",
						"     pivotBy(Symbol),",
						"     {} = sum(Open),",
						"     columnNaming: '$N$V',",
						"     lateral: true) ~> pivot1",
						"union1 select(mapColumn(",
						"          Date,",
						"          Symbol,",
						"          Open",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> select1",
						"select1 cast(output(",
						"          Open as double",
						"     ),",
						"     errors: true) ~> cast1",
						"pivot1 window(over(Date),",
						"     desc(Date, true),",
						"     Row = rowNumber()) ~> window1",
						"window1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     container: 'output',",
						"     partitionFileNames:['Verify.parquet'],",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_TATA_MOTOR')]",
				"[concat(variables('factoryId'), '/datasets/DS_Tata_Steel')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_BlobFlow')]"
			]
		}
	]
}