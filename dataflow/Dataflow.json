{
	"name": "Dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Getting_Record_SQL",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Store_Data",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "Store_Data",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "Split"
				},
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "select3"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          DateTime as string,",
				"          Temperature as string,",
				"          Humidity as string,",
				"          WindSpeed as string,",
				"          Pressure as string,",
				"          Summary as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     moveFiles: ['','Archieve'],",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 split(equals(Summary,'Partly Cloudy'),",
				"     equals(Summary,'Mostly Cloudy'),",
				"     disjoint: true) ~> Split@(PartlyCloudy, MostlyCloudy, RestItems)",
				"Split@RestItems select(mapColumn(",
				"          DateTime,",
				"          Temperature,",
				"          Humidity,",
				"          WindSpeed,",
				"          Pressure,",
				"          Summary",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"Split@MostlyCloudy select(mapColumn(",
				"          DateTime,",
				"          Temperature,",
				"          Humidity,",
				"          WindSpeed,",
				"          Pressure,",
				"          Summary",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"aggregate1 select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"Split@PartlyCloudy aggregate(groupBy(DateTime),",
				"     Pressure = count()) ~> aggregate1",
				"select3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     umask: 0722,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true) ~> sink1",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink2"
			]
		}
	}
}