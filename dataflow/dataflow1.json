{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_TATA_MOTOR",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DS_Tata_Steel",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "LS_BlobFlow",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "union1"
				},
				{
					"name": "pivot1"
				},
				{
					"name": "select1"
				},
				{
					"name": "cast1"
				},
				{
					"name": "window1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Date as string,",
				"          Symbol as string,",
				"          Series as string,",
				"          {Prev Close} as string,",
				"          Open as string,",
				"          High as string,",
				"          Low as string,",
				"          Last as string,",
				"          Close as string,",
				"          VWAP as string,",
				"          Volume as string,",
				"          Turnover as string,",
				"          Trades as string,",
				"          {Deliverable Volume} as string,",
				"          {%Deliverble} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          Date as string,",
				"          Symbol as string,",
				"          Series as string,",
				"          {Prev Close} as string,",
				"          Open as string,",
				"          High as string,",
				"          Low as string,",
				"          Last as string,",
				"          Close as string,",
				"          VWAP as string,",
				"          Volume as string,",
				"          Turnover as string,",
				"          Trades as string,",
				"          {Deliverable Volume} as string,",
				"          {%Deliverble} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source1, source2 union(byName: true)~> union1",
				"cast1 pivot(groupBy(Date),",
				"     pivotBy(Symbol),",
				"     {} = sum(Open),",
				"     columnNaming: '$N$V',",
				"     lateral: true) ~> pivot1",
				"union1 select(mapColumn(",
				"          Date,",
				"          Symbol,",
				"          Open",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> select1",
				"select1 cast(output(",
				"          Open as double",
				"     ),",
				"     errors: true) ~> cast1",
				"pivot1 window(over(Date),",
				"     desc(Date, true),",
				"     Row = rowNumber()) ~> window1",
				"window1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     container: 'output',",
				"     partitionFileNames:['Verify.parquet'],",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}